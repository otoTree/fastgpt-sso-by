root@ubuntu:/data/fastgpt# sudo docker logs fastgpt-sso -f 
[OAuth2] 初始化配置: {
  OAuth2AuthorizeURL: 'https://yun.wzer.net/cas/oauth2.0/authorize',
  OAuth2TokenURL: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
  OAuth2UserInfoURL: 'https://yun.wzer.net/cas/oauth2.0/profile',
  ClientID: '***已配置***',
  ClientSecret: '***已配置***',
  Scope: '',
  OAuth2UsernameMap: 'userName',
  OAuth2AvatarMap: '',
  OAuth2MemberNameMap: 'chineseName',
  OAuth2ContactMap: 'telephone'
}
Provider oauth2
SSO server is running on http://localhost:3000
[OAuth2] oauth2_redirectFn 开始执行，参数: {
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  state: undefined
}
[OAuth2] 创建授权URL，基础URL: https://yun.wzer.net/cas/oauth2.0/authorize
[OAuth2] 缓存redirect_uri: https://aiagent.wzer.net:4000/login/provider
[OAuth2] 生成的重定向URL: https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code
[OAuth2] oauth2_redirectFn 执行成功，返回结果: {
  redirectUrl: 'https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code'
}
[OAuth2] oauth2_getUserInfo 开始执行，参数: { code: 'code-e42d233856544aa98de85f9a013475af' }
[OAuth2] 步骤1: 获取access_token
[OAuth2] Token请求参数: {
  grant_type: 'authorization_code',
  client_id: '748a1bb738614e52',
  code: 'code-e42d233856544aa98de85f9a013475af',
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  client_secret: '***已配置***'
}
[OAuth2] oauth2_getUserInfo 执行出错: AxiosError [AggregateError]
    at AxiosError.from (file:///app/dist/index.js:97454:14)
    at RedirectableRequest.handleRequestError (file:///app/dist/index.js:99056:33)
    at RedirectableRequest.emit (node:events:524:28)
    at eventHandlers.<computed> (file:///app/dist/index.js:56126:26)
    at ClientRequest.emit (node:events:524:28)
    at emitErrorEvent (node:_http_client:101:11)
    at TLSSocket.socketErrorListener (node:_http_client:504:5)
    at TLSSocket.emit (node:events:524:28)
    at emitErrorNT (node:internal/streams/destroy:169:8)
    at emitErrorCloseNT (node:internal/streams/destroy:128:3)
    at Axios.request (file:///app/dist/index.js:99784:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async oauth2_getUserInfo (file:///app/dist/index.js:100796:27)
    at async handleGetUserInfo (file:///app/dist/index.js:102020:22) {
  code: 'ETIMEDOUT',
  errors: [
    Error: connect ETIMEDOUT 122.228.219.10:443
        at createConnectionError (node:net:1652:14)
        at Timeout.internalConnectMultipleTimeout (node:net:1711:38)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -110,
      code: 'ETIMEDOUT',
      syscall: 'connect',
      address: '122.228.219.10',
      port: 443
    },
    Error: connect ENETUNREACH 240e:f7:c010:1200:0:1:a:2:443 - Local (:::0)
        at internalConnectMultiple (node:net:1186:16)
        at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -101,
      code: 'ENETUNREACH',
      syscall: 'connect',
      address: '240e:f7:c010:1200:0:1:a:2',
      port: 443
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/x-www-form-urlencoded',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '216',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    url: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    method: 'post',
    data: 'grant_type=authorization_code&client_id=748a1bb738614e52&code=code-e42d233856544aa98de85f9a013475af&redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_secret=3950662133874764b1557767d10f1033',
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/cas/oauth2.0/accessToken',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'yun.wzer.net',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/cas/oauth2.0/accessToken'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 216,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 216,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      socket: [TLSSocket],
      _header: 'POST /cas/oauth2.0/accessToken HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 216\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: yun.wzer.net\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cas/oauth2.0/accessToken',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'yun.wzer.net',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ETIMEDOUT]: 
      at internalConnectMultiple (node:net:1122:18)
      at internalConnectMultiple (node:net:1190:5)
      at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
      at listOnTimeout (node:internal/timers:583:11)
      at process.processTimers (node:internal/timers:519:7) {
    code: 'ETIMEDOUT',
    [errors]: [ [Error], [Error] ]
  }
}
[OAuth2] oauth2_redirectFn 开始执行，参数: {
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  state: undefined
}
[OAuth2] 创建授权URL，基础URL: https://yun.wzer.net/cas/oauth2.0/authorize
[OAuth2] 缓存redirect_uri: https://aiagent.wzer.net:4000/login/provider
[OAuth2] 生成的重定向URL: https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code
[OAuth2] oauth2_redirectFn 执行成功，返回结果: {
  redirectUrl: 'https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code'
}
[OAuth2] oauth2_getUserInfo 开始执行，参数: { code: 'code-d5c2d4f719f0442caaaeff174eab77a9' }
[OAuth2] 步骤1: 获取access_token
[OAuth2] Token请求参数: {
  grant_type: 'authorization_code',
  client_id: '748a1bb738614e52',
  code: 'code-d5c2d4f719f0442caaaeff174eab77a9',
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  client_secret: '***已配置***'
}
[OAuth2] oauth2_getUserInfo 执行出错: AxiosError [AggregateError]
    at AxiosError.from (file:///app/dist/index.js:97454:14)
    at RedirectableRequest.handleRequestError (file:///app/dist/index.js:99056:33)
    at RedirectableRequest.emit (node:events:524:28)
    at eventHandlers.<computed> (file:///app/dist/index.js:56126:26)
    at ClientRequest.emit (node:events:524:28)
    at emitErrorEvent (node:_http_client:101:11)
    at TLSSocket.socketErrorListener (node:_http_client:504:5)
    at TLSSocket.emit (node:events:524:28)
    at emitErrorNT (node:internal/streams/destroy:169:8)
    at emitErrorCloseNT (node:internal/streams/destroy:128:3)
    at Axios.request (file:///app/dist/index.js:99784:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async oauth2_getUserInfo (file:///app/dist/index.js:100796:27)
    at async handleGetUserInfo (file:///app/dist/index.js:102020:22) {
  code: 'ETIMEDOUT',
  errors: [
    Error: connect ETIMEDOUT 122.228.219.10:443
        at createConnectionError (node:net:1652:14)
        at Timeout.internalConnectMultipleTimeout (node:net:1711:38)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -110,
      code: 'ETIMEDOUT',
      syscall: 'connect',
      address: '122.228.219.10',
      port: 443
    },
    Error: connect ENETUNREACH 240e:f7:c010:1200:0:1:a:2:443 - Local (:::0)
        at internalConnectMultiple (node:net:1186:16)
        at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -101,
      code: 'ENETUNREACH',
      syscall: 'connect',
      address: '240e:f7:c010:1200:0:1:a:2',
      port: 443
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/x-www-form-urlencoded',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '216',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    url: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    method: 'post',
    data: 'grant_type=authorization_code&client_id=748a1bb738614e52&code=code-d5c2d4f719f0442caaaeff174eab77a9&redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_secret=3950662133874764b1557767d10f1033',
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/cas/oauth2.0/accessToken',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'yun.wzer.net',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/cas/oauth2.0/accessToken'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 216,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 216,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      socket: [TLSSocket],
      _header: 'POST /cas/oauth2.0/accessToken HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 216\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: yun.wzer.net\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cas/oauth2.0/accessToken',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'yun.wzer.net',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ETIMEDOUT]: 
      at internalConnectMultiple (node:net:1122:18)
      at internalConnectMultiple (node:net:1190:5)
      at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
      at listOnTimeout (node:internal/timers:583:11)
      at process.processTimers (node:internal/timers:519:7) {
    code: 'ETIMEDOUT',
    [errors]: [ [Error], [Error] ]
  }
}
[OAuth2] oauth2_redirectFn 开始执行，参数: {
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  state: undefined
}
[OAuth2] 创建授权URL，基础URL: https://yun.wzer.net/cas/oauth2.0/authorize
[OAuth2] 缓存redirect_uri: https://aiagent.wzer.net:4000/login/provider
[OAuth2] 生成的重定向URL: https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code
[OAuth2] oauth2_redirectFn 执行成功，返回结果: {
  redirectUrl: 'https://yun.wzer.net/cas/oauth2.0/authorize?redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_id=748a1bb738614e52&response_type=code'
}
[OAuth2] oauth2_getUserInfo 开始执行，参?°: { code: 'code-729989cd8a8f4123a4e751c61c918b29' }
[OAuth2] 步骤1: 获取access_token
[OAuth2] Token请求参数: {
  grant_type: 'authorization_code',
  client_id: '748a1bb738614e52',
  code: 'code-729989cd8a8f4123a4e751c61c918b29',
  redirect_uri: 'https://aiagent.wzer.net:4000/login/provider',
  client_secret: '***已配置***'
}
[OAuth2] oauth2_getUserInfo 执行出错: AxiosError [AggregateError]
    at AxiosError.from (file:///app/dist/index.js:97454:14)
    at RedirectableRequest.handleRequestError (file:///app/dist/index.js:99056:33)
    at RedirectableRequest.emit (node:events:524:28)
    at eventHandlers.<computed> (file:///app/dist/index.js:56126:26)
    at ClientRequest.emit (node:events:524:28)
    at emitErrorEvent (node:_http_client:101:11)
    at TLSSocket.socketErrorListener (node:_http_client:504:5)
    at TLSSocket.emit (node:events:524:28)
    at emitErrorNT (node:internal/streams/destroy:169:8)
    at emitErrorCloseNT (node:internal/streams/destroy:128:3)
    at Axios.request (file:///app/dist/index.js:99784:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async oauth2_getUserInfo (file:///app/dist/index.js:100796:27)
    at async handleGetUserInfo (file:///app/dist/index.js:102020:22) {
  code: 'ETIMEDOUT',
  errors: [
    Error: connect ETIMEDOUT 122.228.219.10:443
        at createConnectionError (node:net:1652:14)
        at Timeout.internalConnectMultipleTimeout (node:net:1711:38)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -110,
      code: 'ETIMEDOUT',
      syscall: 'connect',
      address: '122.228.219.10',
      port: 443
    },
    Error: connect ENETUNREACH 240e:f7:c010:1200:0:1:a:2:443 - Local (:::0)
        at internalConnectMultiple (node:net:1186:16)
        at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
        at listOnTimeout (node:internal/timers:583:11)
        at process.processTimers (node:internal/timers:519:7) {
      errno: -101,
      code: 'ENETUNREACH',
      syscall: 'connect',
      address: '240e:f7:c010:1200:0:1:a:2',
      port: 443
    }
  ],
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: { FormData: [Function], Blob: [class Blob] },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/x-www-form-urlencoded',
      'User-Agent': 'axios/1.9.0',
      'Content-Length': '216',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    url: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    method: 'post',
    data: 'grant_type=authorization_code&client_id=748a1bb738614e52&code=code-729989cd8a8f4123a4e751c61c918b29&redirect_uri=https%3A%2F%2Faiagent.wzer.net%3A4000%2Flogin%2Fprovider&client_secret=3950662133874764b1557767d10f1033',
    allowAbsoluteUrls: true
  },
  request: <ref *1> Writable {
    _events: {
      close: undefined,
      error: [Function: handleRequestError],
      prefinish: undefined,
      finish: undefined,
      drain: undefined,
      response: [Function: handleResponse],
      socket: [Function: handleRequestSocket]
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 0,
      [Symbol(kState)]: 17580812,
      [Symbol(kBufferedValue)]: null
    },
    _maxListeners: undefined,
    _options: {
      maxRedirects: 21,
      maxBodyLength: Infinity,
      protocol: 'https:',
      path: '/cas/oauth2.0/accessToken',
      method: 'POST',
      headers: [Object: null prototype],
      agents: [Object],
      auth: undefined,
      family: undefined,
      beforeRedirect: [Function: dispatchBeforeRedirect],
      beforeRedirects: [Object],
      hostname: 'yun.wzer.net',
      port: '',
      agent: undefined,
      nativeProtocols: [Object],
      pathname: '/cas/oauth2.0/accessToken'
    },
    _ended: false,
    _ending: true,
    _redirectCount: 0,
    _redirects: [],
    _requestBodyLength: 216,
    _requestBodyBuffers: [ [Object] ],
    _eventsCount: 3,
    _onNativeResponse: [Function (anonymous)],
    _currentRequest: ClientRequest {
      _events: [Object: null prototype],
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: 216,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: true,
      _closed: false,
      socket: [TLSSocket],
      _header: 'POST /cas/oauth2.0/accessToken HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/x-www-form-urlencoded\r\n' +
        'User-Agent: axios/1.9.0\r\n' +
        'Content-Length: 216\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: yun.wzer.net\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: [Agent],
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/cas/oauth2.0/accessToken',
      _ended: false,
      res: null,
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: 'yun.wzer.net',
      protocol: 'https:',
      _redirectable: [Circular *1],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype],
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    _currentUrl: 'https://yun.wzer.net/cas/oauth2.0/accessToken',
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false
  },
  cause: AggregateError [ETIMEDOUT]: 
      at internalConnectMultiple (node:net:1122:18)
      at internalConnectMultiple (node:net:1190:5)
      at Timeout.internalConnectMultipleTimeout (node:net:1716:5)
      at listOnTimeout (node:internal/timers:583:11)
      at process.processTimers (node:internal/timers:519:7) {
    code: 'ETIMEDOUT',
    [errors]: [ [Error], [Error] ]
  }
}
